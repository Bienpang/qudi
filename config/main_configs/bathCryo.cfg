global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'
hardware:
    high_finesse_client:
        module.Class: 'high_finesse_client.HighFinesseWavemeterClient'
        ip_wlm: '129.69.46.209'
        
    dtg_pulser:
        module.Class: 'dtg.dtg.DTG'
        visa_address: 'TCPIP0::129.69.46.221::inst0::INSTR'
        channels: [['A', 1], ['A', 2]]
        trigger_channel: ['A', 2]

    motor_pi3: 
        module.Class: 'motor.motordriver_pi3.Motordriver'
        port: 'COM3'
        active_motor_numbers: [0]
    tagger:
        module.Class: 'timetagger.timetagger.TT'
        hist:
            channel: 2
            trigger_channel: 5
            bins_width: 1000
            number_of_bins: 500

        corr:
            channel_start: 1
            channel_stop: 2
            bins_width: 1000
            number_of_bins: 1000
            ctrate:
            channels: [1,2]

        counter:
            channels: [1,2,3,4]
            bins_width: 1000000000000
            n_values: 100

        combiner:
            channels: [1,2,3,4]

        test_channels: [] #[1,2,3,4,5,6,7]#[1,2, 4, -4]

        channels_params:
            six: # cwave internal scanner
                delay: 0
                trigger_level: 3
        maxDumps: 1000000000
    powermeter:
        module.Class: 'powermeter.PM100D.PM100D'
        address: 'USB0::0x1313::0x8078::P0006721::INSTR'
    powermeter2:
        module.Class: 'powermeter.PM100D.PM100D'
        address: 'USB0::0x1313::0x80B0::P3000581::INSTR'

    mycounter:
        module.Class: 'timetagger_counter.TimeTaggerCounter'
        timetagger_channel_apd_0: 1
        timetagger_channel_apd_1: 2
        # timetagger_sum_channels: True
        connect:
            timetagger: "tagger"
    myfastcounter:
        module.Class: 'timetagger_fast_counter.TimeTaggerFastCounter'
        timetagger_channel_apd_0: 1
        timetagger_channel_apd_1: 2
        # timetagger_sum_channels: True
        connect:
            timetagger: "tagger"
    nicard_6229:
        module.Class: 'national_instruments_x_series_tt.NationalInstrumentsXSeries'
        default_scanner_clock_frequency: 100 # optional, in Hz
        clock_channel: '/Dev1/Ctr0' 
        counter_channels: '' 
        scanner_clock_channel: '/Dev1/Ctr0' # internally connected to pixel_clock_channel
        pixel_clock_channel: '/Dev1/PFI12' # Connect to timetagger_pixel_start_ch, timetagger_pixel_stop_ch
        flip_mirror_channel: '/Dev1/port0/line1'
        shutter_channel: '/Dev1/port0/line16'
        scanner_ao_channels:
            - '/Dev1/AO0'
            - '/Dev1/AO1'
            - '/Dev1/AO2'# z scanner
            - '/Dev1/AO3' # laser scanner
        scanner_counter_channels: # won't be used | only for name sake
            - ''
            - ''
        scanner_voltage_ranges:
            - [-2, 10] #do not change! 
            - [-2, 10] #do not change!
            - [0, 10] #do not change!
            - [-5, 5] #ple scanner
        scanner_position_ranges:
            - [0e-6, 300e-6] 
            - [0e-6, 300e-6]
            - [0e-6, 20e-6]
            - [0, 30000]
        scanner_position_ranges_rt:
            - [0e-6, 300e-6] 
            - [0e-6, 300e-6]
            - [0e-6, 20e-6]
            - [0, 30000]
        scanner_position_ranges_lt:
            - [0e-6, 300e-6] 
            - [0e-6, 300e-6]
            - [0e-6, 20e-6]
            - [0, 30000]
        timetagger_channel_apd_0: 1
        timetagger_channel_apd_1: 2
        timetagger_pixel_start_ch: 6
        timetagger_pixel_stop_ch: -6 
        timetagger_sum_channels: False

        odmr_trigger_channel: '/Dev1/PFI10' 
        #gate_in_channel: '/Dev1/Ctr1' # won't be used
        connect:
            timetagger: "tagger"
    myspectrometer:
        module.Class: 'spectrometer.oceanoptics_spectrometer.OceanOptics'
        spectrometer_serial: 'QEP01583' #insert here the right serial number.
        
            
logic:
    simple_pulser_logic:
        module.Class: 'pulser_simple_logic.PulserSimpleLogic'
        connect:
            pulser: 'dtg_pulser'

    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'mycounter'
            savelogic: 'savelogic'
    
    spectrumlogic:
        module.Class: 'spectrum.SpectrumLogic'
        connect:
            spectrometer: 'myspectrometer'
            #  princeton: 'princeton_client' 
            #nicard:'nicard_6229'
            # cwavelaser: 'cwavelaser'
            #ello_devices: 'ello_devices'
            savelogic: 'savelogic'
            fitlogic: 'fitlogic'

    timetaggerlogic:
        module.Class: 'timetagger.timetagger.TimeTaggerLogic'
        connect:
            timetagger: 'tagger'
            savelogic: 'savelogic'

    scannerlogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            savelogic: 'savelogic'

    scanner_tilt_interfuse:
        module.Class: 'interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse'
        connect:
            confocalscanner1: 'nicard_6229'
    
    laserscannerlogic:
        module.Class: 'laser_scanner_logic.LaserScannerLogic'
        connect:
            confocalscanner1: 'nicard_6229'
            savelogic: 'savelogic'
            stepmotor: 'motor_pi3'

    wlmscannerlogic:
        module.Class: 'wlm_scanner_logic.WlmScannerLogic'
        connect: 
            timetagger: 'tagger'
            wavemeter: 'high_finesse_client'
            savelogic: 'savelogic'

    wavemeterloggerlogic:
        module.Class: 'wlm_logger.WlmLogger'
        connect: 
            timetagger: 'tagger'
            wavemeter: 'high_finesse_client'
            savelogic: 'savelogic'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            fitlogic: 'fitlogic'

    savelogic:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: 'Data/'
        log_into_daily_directory: True
        save_pdf: True
        save_png: True

    fitlogic:
        module.Class: 'fit_logic.FitLogic'

    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True


    timeserieslogic:
        module.Class: 'time_series_reader_logic.TimeSeriesReaderLogic'
        max_frame_rate: 10  # optional (10Hz by default) should be > 2/trace_window_size
        connect:
            _streamer_con: 'timetagger_instream_interfuse'
            _savelogic_con: 'savelogic'
gui:
    pulser:
        module.Class: 'pulser.pulser_gui.PulserGui'
        connect: 
            simple_pulser_logic: 'simple_pulser_logic'
    counter:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'
    confocal:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scannerlogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02
        default_meter_prefix: 'u'
        
    spectrometer:
        module.Class: 'spectrometer.spectrometergui.SpectrometerGui'
        connect:
            spectrumlogic: 'spectrumlogic'


    wlmlogger:
        module.Class: 'wavemeterlogger.wavemeterloggui.WavemeterLogGui'
        connect:
            wavemeterloggerlogic1: 'wavemeterloggerlogic'
            savelogic: 'savelogic'
    wlm_scanner:
        module.Class: 'laserscanner.wlm_scanner_gui.WlmScanGui'
        connect:
            wlm_scanner_logic: 'wlmscannerlogic'
            savelogic: 'savelogic'

    timetagger:
        module.Class: 'timetagger.ttg2.TTGui'
        connect:
            timetaggerlogic: 'timetaggerlogic'
            savelogic: 'savelogic'
    laserscanner:
        module.Class: 'laserscanner.laserscannergui.VoltScanGui'
        connect:
            voltagescannerlogic1: 'laserscannerlogic'
            savelogic: 'savelogic'

    tray:
        module.Class: 'trayicon.TrayIcon'
    man:
        module.Class: 'manager.managergui.ManagerGui'

    # gui from fffish fork
    timeseries:
        module.Class: 'time_series.time_series_gui.TimeSeriesGui'
        use_antialias: True  # optional, set to False if you encounter performance issues
        connect:
            _time_series_logic_con: 'timeserieslogic'